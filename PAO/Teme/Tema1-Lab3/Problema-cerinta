Exercitiul 1:
a.
Creati o clasa CandyBox, care va conține câmpurile private flavor (String) și origin (String). Clasa va avea, de asemenea:
- un constructor fără parametri;
- un constructor ce va inițializa toate campurile;
- o metoda de tip float getVolume(), care va intoarce valoarea 0.
Adaugati o metoda toString(), care va returna flavor-ul si regiunea de proveniență a cutiei de bomboane.

b.
Din clasa initiala derivați clasele Lindt, Milka, Heidi. Pentru un design interesant, cutiile vor avea forme diferite, cu dimensiuni float:
- Lindt va fi un paralelipiped dreptunghic;
- Milka va fi un cilindru;
- Heidi va fi un cub.
Clasele vor avea:
- constructori fără parametri;
- constructori care permit inițializarea membrilor. Identificați o modalitate de reutilizare a codului existent. Pentru fiecare tip de cutie veti initializa, in constructor, campurile flavor și origin cu tipul corespunzator.
Suprascrieti metoda getVolume() pentru a intoarce volumul specific fiecarei cutii de bomboane.
Suprascrieti metoda toString() în clasele derivate, astfel încat aceasta să utilizeze implementarea metodei toString() din clasa de bază. Returnați un mesaj de forma “The ” + origin + “ ” + flavor + “ has volume ” + volume;

c.
Adăugați o metodă equals() în clasa CandyBox. Justificați criteriul de echivalentă ales. 
Hint: Puteti genera automat metoda, cu ajutorul IDE. Selectați câmpurile considerate și analizați în ce fel va fi suprascrisă metoda equals.

d.
Creati o clasă CandyBag, care va conține un array cu mai multe cutii din fiecare tip. Pentru obiectele de tip Lindt testați egalitatea lor.

e.
Adaugati clasei Milka metoda printMilkaDim(), care va afișa dimensiunile razei și inaltimii. Procedati in mod analog cu celelalte tipuri de cutii, adaugand metodele printHeidiDim() si printLindtDim(), în care să afișați dimensiunile fiecarei cutii.

